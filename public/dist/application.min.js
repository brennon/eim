"use strict";var ApplicationConfiguration=function(){var applicationModuleName="emotion-in-motion";return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils","cfp.hotkeys","btford.socket-io","gettext","logglyLogger","uuid","ngLodash"],registerModule:function(moduleName){angular.module(moduleName,[]),angular.module(applicationModuleName).requires.push(moduleName)}}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.module(ApplicationConfiguration.applicationModuleName).config(["LogglyLoggerProvider",function(LogglyLoggerProvider){LogglyLoggerProvider.includeUrl(!0).includeTimestamp(!0).sendConsoleErrors(!0).inputTag("AngularJS")}]),angular.module(ApplicationConfiguration.applicationModuleName).run(["LogglyLogger","$http","$log",function(LogglyLogger,$http,$log){$http.get("/api/config").success(function(data){data.hasOwnProperty("logglyToken")&&"string"==typeof data.logglyToken&&data.logglyToken.length>0&&(LogglyLogger.inputToken(data.logglyToken),$log.debug("Loggly input token retrieved from server."))}).error(function(){$log.error("The configuration could not be fetched from the server.")})}]),angular.module(ApplicationConfiguration.applicationModuleName).run(["gettextCatalog",function(gettextCatalog){gettextCatalog.debug=!0}]),angular.module(ApplicationConfiguration.applicationModuleName).run(["$rootScope",function($rootScope){$rootScope.$on("$stateChangeSuccess",function(){$("html, body").animate({scrollTop:0},200)})}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("core"),angular.module("core").controller(["gettext",function(gettext){gettext("No Signal"),gettext("Signal OK"),gettext("Personal Details"),gettext("Gender"),gettext("Male"),gettext("Female"),gettext("Nationality"),gettext("Afghan"),gettext("Albanian"),gettext("Algerian"),gettext("American"),gettext("Andorran"),gettext("Angolan"),gettext("Antiguans"),gettext("Argentinean"),gettext("Armenian"),gettext("Australian"),gettext("Austrian"),gettext("Azerbaijani"),gettext("Bahamian"),gettext("Bahraini"),gettext("Bangladeshi"),gettext("Barbadian"),gettext("Barbudans"),gettext("Batswana"),gettext("Belarusian"),gettext("Belgian"),gettext("Belizean"),gettext("Beninese"),gettext("Bhutanese"),gettext("Bolivian"),gettext("Bosnian"),gettext("Brazilian"),gettext("British"),gettext("Bruneian"),gettext("Bulgarian"),gettext("Burkinabe"),gettext("Burmese"),gettext("Burundian"),gettext("Cambodian"),gettext("Cameroonian"),gettext("Canadian"),gettext("Cape Verdean"),gettext("Central African"),gettext("Chadian"),gettext("Chilean"),gettext("Chinese"),gettext("Colombian"),gettext("Comoran"),gettext("Congolese"),gettext("Costa Rican"),gettext("Croatian"),gettext("Cuban"),gettext("Cypriot"),gettext("Czech"),gettext("Danish"),gettext("Djibouti"),gettext("Dominican"),gettext("Dutch"),gettext("East Timorese"),gettext("Ecuadorean"),gettext("Egyptian"),gettext("Emirian"),gettext("Equatorial Guinean"),gettext("Eritrean"),gettext("Estonian"),gettext("Ethiopian"),gettext("Fijian"),gettext("Filipino"),gettext("Finnish"),gettext("French"),gettext("Gabonese"),gettext("Gambian"),gettext("Georgian"),gettext("German"),gettext("Ghanaian"),gettext("Greek"),gettext("Grenadian"),gettext("Guatemalan"),gettext("Guinea-Bissauan"),gettext("Guinean"),gettext("Guyanese"),gettext("Haitian"),gettext("Herzegovinian"),gettext("Honduran"),gettext("Hungarian"),gettext("I-Kiribati"),gettext("Icelander"),gettext("Indian"),gettext("Indonesian"),gettext("Iranian"),gettext("Iraqi"),gettext("Irish"),gettext("Israeli"),gettext("Italian"),gettext("Ivorian"),gettext("Jamaican"),gettext("Japanese"),gettext("Jordanian"),gettext("Kazakhstani"),gettext("Kenyan"),gettext("Kittian and Nevisian"),gettext("Kuwaiti"),gettext("Kyrgyz"),gettext("Laotian"),gettext("Latvian"),gettext("Lebanese"),gettext("Liberian"),gettext("Libyan"),gettext("Liechtensteiner"),gettext("Lithuanian"),gettext("Luxembourger"),gettext("Macedonian"),gettext("Malagasy"),gettext("Malawian"),gettext("Malaysian"),gettext("Maldivan"),gettext("Malian"),gettext("Maltese"),gettext("Marshallese"),gettext("Mauritanian"),gettext("Mauritian"),gettext("Mexican"),gettext("Micronesian"),gettext("Moldovan"),gettext("Monacan"),gettext("Mongolian"),gettext("Moroccan"),gettext("Mosotho"),gettext("Motswana"),gettext("Mozambican"),gettext("Namibian"),gettext("Nauruan"),gettext("Nepalese"),gettext("New Zealander"),gettext("Nicaraguan"),gettext("Nigerian"),gettext("Nigerien"),gettext("North Korean"),gettext("Northern Irish"),gettext("Norwegian"),gettext("Omani"),gettext("Pakistani"),gettext("Palauan"),gettext("Panamanian"),gettext("Papua New Guinean"),gettext("Paraguayan"),gettext("Peruvian"),gettext("Polish"),gettext("Portuguese"),gettext("Qatari"),gettext("Romanian"),gettext("Russian"),gettext("Rwandan"),gettext("Saint Lucian"),gettext("Salvadoran"),gettext("Samoan"),gettext("San Marinese"),gettext("Sao Tomean"),gettext("Saudi"),gettext("Scottish"),gettext("Senegalese"),gettext("Serbian"),gettext("Seychellois"),gettext("Sierra Leonean"),gettext("Singaporean"),gettext("Slovakian"),gettext("Slovenian"),gettext("Solomon Islander"),gettext("Somali"),gettext("South African"),gettext("South Korean"),gettext("Spanish"),gettext("Sri Lankan"),gettext("Sudanese"),gettext("Surinamer"),gettext("Swazi"),gettext("Swedish"),gettext("Swiss"),gettext("Syrian"),gettext("Taiwanese"),gettext("Tajik"),gettext("Tanzanian"),gettext("Thai"),gettext("Togolese"),gettext("Tongan"),gettext("Trinidadian or Tobagonian"),gettext("Tunisian"),gettext("Turkish"),gettext("Tuvaluan"),gettext("Ugandan"),gettext("Ukrainian"),gettext("Uruguayan"),gettext("Uzbekistani"),gettext("Venezuelan"),gettext("Vietnamese"),gettext("Welsh"),gettext("Yemenite"),gettext("Zambian"),gettext("Zimbabwean");gettext("Birth Year"),gettext("Musical Background"),gettext("Do you consider yourself a musician or to have specialist musical knowledge?"),gettext("Yes"),gettext("No"),gettext("No expertise whatsoever"),gettext("An expert"),gettext("Do you have any visual impairments? (If so, you may still participate in the experiment!)"),gettext("Select all of the following styles to which you regularly listen:"),gettext("Rock"),gettext("Pop"),gettext("Classical"),gettext("Jazz"),gettext("Dance"),gettext("HipHop"),gettext("Folk"),gettext("World"),gettext("None"),gettext("Media Questions"),gettext("I was engaged with it and responding to it emotionally"),gettext("How involved and engaged were you with what you have just heard?"),gettext("Very negative"),gettext("Very positive"),gettext("How positive or negative did what you have just heard make you feel?"),gettext("Very drowsy"),gettext("Very lively"),gettext("How active or passive did what you have just heard make you feel?"),gettext("Weak (without control, submissive)"),gettext("Empowered (in control of everything, dominant)"),gettext("How in control did you feel?"),gettext("Not at all engaged, my mind was elsewhere"),gettext("Very drowsy"),gettext("Very lively"),gettext("Weak (without control, submissive)"),gettext("Empowered (in control of everything, dominant)"),gettext("How in control did you feel?"),gettext("Not at all"),gettext("Very tense"),gettext("Very relaxed"),gettext("How tense or relaxed did you feel while you were listening?"),gettext("I hated it"),gettext("I loved it"),gettext("How much did you like/dislike what you have just heard?"),gettext("I had never heard it before"),gettext("I listen to it regularly"),gettext("How familiar are you with what you have just heard?"),gettext("Age"),gettext("How would you rate your musical expertise?"),gettext("Do you have any hearing impairments? (If so, you may still participate in the experiment!)"),gettext("Additional Questions"),gettext("How well do the following statements describe your personality?"),gettext("I see myself as someone who is reserved."),gettext("Disagree strongly"),gettext("Disagree a little"),gettext("Neither agree nor disagree"),gettext("Agree a little"),gettext("Agree strongly"),gettext("I see myself as someone who is generally trusting."),gettext("I see myself as someone who tends to be lazy."),gettext("I see myself as someone who is relaxed, handles stress well."),gettext("I see myself as someone who has few artistic interests."),gettext("I see myself as someone who is outgoing, sociable."),gettext("I see myself as someone who tends to find fault with others."),gettext("I see myself as someone who does a thorough job."),gettext("I see myself as someone who gets nervous easily."),gettext("I see myself as someone who has an active imagination."),gettext("This questionnaire uses some simple scales to find out how you responded to the media excerpt. We will compare your responses to the biosignals that we measured as you were listening."),gettext("Final Questions"),gettext("How concentrated were you during this experiment?"),gettext("Very distracted"),gettext("Very concentrated"),gettext("1"),gettext("2"),gettext("3"),gettext("4"),gettext("5"),gettext("6"),gettext("7"),gettext("8"),gettext("9"),gettext("10"),gettext("11"),gettext("12"),gettext("13"),gettext("14"),gettext("15"),gettext("16"),gettext("17"),gettext("18"),gettext("19"),gettext("20"),gettext("21"),gettext("22"),gettext("23"),gettext("24"),gettext("25"),gettext("26"),gettext("27"),gettext("28"),gettext("29"),gettext("30"),gettext("31"),gettext("32"),gettext("33"),gettext("34"),gettext("35"),gettext("36"),gettext("37"),gettext("38"),gettext("39"),gettext("40"),gettext("41"),gettext("42"),gettext("43"),gettext("44"),gettext("45"),gettext("46"),gettext("47"),gettext("48"),gettext("49"),gettext("50"),gettext("51"),gettext("52"),gettext("53"),gettext("54"),gettext("55"),gettext("56"),gettext("57"),gettext("58"),gettext("59"),gettext("60"),gettext("61"),gettext("62"),gettext("63"),gettext("64"),gettext("65"),gettext("66"),gettext("67"),gettext("68"),gettext("69"),gettext("70"),gettext("71"),gettext("72"),gettext("73"),gettext("74"),gettext("75"),gettext("76"),gettext("77"),gettext("78"),gettext("79"),gettext("80"),gettext("81"),gettext("82"),gettext("83"),gettext("84"),gettext("85"),gettext("86"),gettext("87"),gettext("88"),gettext("89"),gettext("90"),gettext("91"),gettext("92"),gettext("93"),gettext("94"),gettext("95"),gettext("96"),gettext("97"),gettext("98"),gettext("99"),gettext("100"),gettext("101"),gettext("102"),gettext("103"),gettext("104"),gettext("105"),gettext("106"),gettext("107"),gettext("108"),gettext("109"),gettext("110"),gettext("111"),gettext("112"),gettext("113"),gettext("114"),gettext("115"),gettext("116"),gettext("117"),gettext("118"),gettext("119"),gettext("120"),gettext("121"),gettext("Begin Playback")}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){angular.injector(["ng"]).get("$log").debug("Configuring routes in modules/core/config/core.client.routes.js"),$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"}).state("start",{url:"/start",templateUrl:"modules/core/views/start.client.view.html"}).state("consent-form",{url:"/consent-form",templateUrl:"modules/core/views/consent-form.client.view.html"}).state("sound-test",{url:"/sound-test",templateUrl:"modules/core/views/sound-test.client.view.html"}).state("eda-instructions",{url:"/eda-instructions",templateUrl:"modules/core/views/eda-instructions.client.view.html"}).state("pox-instructions",{url:"/pox-instructions",templateUrl:"modules/core/views/pox-instructions.client.view.html"}).state("signal-test",{url:"/signal-test",templateUrl:"modules/core/views/signal-test.client.view.html"}).state("demographics",{url:"/demographics",templateUrl:"modules/core/views/demographics.client.view.html"}).state("musical-background",{url:"/musical-background",templateUrl:"modules/core/views/musical-background.client.view.html"}).state("media-playback",{url:"/media-playback",templateUrl:"modules/core/views/media-playback.client.view.html"}).state("questionnaire",{url:"/media-questionnaire",templateUrl:"modules/core/views/media-questionnaire.client.view.html"}).state("impulse-playback",{url:"/impulse-playback",templateUrl:"modules/core/views/impulse-playback.client.view.html"}).state("emotion-index",{url:"/emotion-index",templateUrl:"modules/core/views/emotion-index.client.view.html"}).state("thank-you",{url:"/thank-you",templateUrl:"modules/core/views/thank-you.client.view.html"})}]),angular.module("core").controller("DemographicsController",["$scope","TrialData","$log",function($scope,TrialData,$log){$log.debug("Loading DemographicsController."),$scope.nationalities=["Afghan","Albanian","Algerian","American","Andorran","Angolan","Antiguans","Argentinean","Armenian","Australian","Austrian","Azerbaijani","Bahamian","Bahraini","Bangladeshi","Barbadian","Barbudans","Batswana","Belarusian","Belgian","Belizean","Beninese","Bhutanese","Bolivian","Bosnian","Brazilian","British","Bruneian","Bulgarian","Burkinabe","Burmese","Burundian","Cambodian","Cameroonian","Canadian","Cape Verdean","Central African","Chadian","Chilean","Chinese","Colombian","Comoran","Congolese","Costa Rican","Croatian","Cuban","Cypriot","Czech","Danish","Djibouti","Dominican","Dutch","East Timorese","Ecuadorean","Egyptian","Emirian","Equatorial Guinean","Eritrean","Estonian","Ethiopian","Fijian","Filipino","Finnish","French","Gabonese","Gambian","Georgian","German","Ghanaian","Greek","Grenadian","Guatemalan","Guinea-Bissauan","Guinean","Guyanese","Haitian","Herzegovinian","Honduran","Hungarian","I-Kiribati","Icelander","Indian","Indonesian","Iranian","Iraqi","Irish","Israeli","Italian","Ivorian","Jamaican","Japanese","Jordanian","Kazakhstani","Kenyan","Kittian and Nevisian","Kuwaiti","Kyrgyz","Laotian","Latvian","Lebanese","Liberian","Libyan","Liechtensteiner","Lithuanian","Luxembourger","Macedonian","Malagasy","Malawian","Malaysian","Maldivan","Malian","Maltese","Marshallese","Mauritanian","Mauritian","Mexican","Micronesian","Moldovan","Monacan","Mongolian","Moroccan","Mosotho","Motswana","Mozambican","Namibian","Nauruan","Nepalese","New Zealander","Nicaraguan","Nigerian","Nigerien","North Korean","Northern Irish","Norwegian","Omani","Pakistani","Palauan","Panamanian","Papua New Guinean","Paraguayan","Peruvian","Polish","Portuguese","Qatari","Romanian","Russian","Rwandan","SaintLucian","Salvadoran","Samoan","San Marinese","Sao Tomean","Saudi","Scottish","Senegalese","Serbian","Seychellois","Sierra Leonean","Singaporean","Slovakian","Slovenian","Solomon Islander","Somali","South African","South Korean","Spanish","Sri Lankan","Sudanese","Surinamer","Swazi","Swedish","Swiss","Syrian","Taiwanese","Tajik","Tanzanian","Thai","Togolese","Tongan","Trinidadian or Tobagonian","Tunisian","Turkish","Tuvaluan","Ugandan","Ukrainian","Uruguayan","Uzbekistani","Venezuelan","Vietnamese","Welsh","Yemenite","Zambian","Zimbabwean"],$scope.years=[];for(var thisYear=(new Date).getFullYear(),i=thisYear;i>=thisYear-110;i--)$scope.years.push(i);$scope.nationalityChanged=function(nationality){$log.info("Nationality changed to "+nationality+"."),TrialData.data.answers.nationality=nationality.toString().toLowerCase()},$scope.yearChanged=function(year){$log.info("Year changed to "+year+"."),TrialData.data.answers.dob=year},$scope.genderChanged=function(gender){$log.info("Gender changed to "+gender+"."),TrialData.data.answers.sex=gender}}]),angular.module("core").controller("EmotionIndexController",["$scope","TrialData","$log",function($scope,TrialData,$log){if($log.debug("Loading EmotionIndexController."),$scope.signalsPlotLocation="modules/core/img/plots/"+TrialData.data.metadata.session_number+"_results.png",$scope.emotionIndices=TrialData.data.answers.emotion_indices,void 0===$scope.emotionIndices){var min=25,max=65,randomIndex=Math.floor(Math.random()*(max-min))+min;$scope.emotionIndices=[0,randomIndex,0]}var emotionIndex=$scope.emotionIndices[1];$scope.qrCode="modules/core/img/qr1.png",$scope.modelImage="modules/core/img/model1.png",emotionIndex<=20?($scope.qrCode="modules/core/img/qr1.jpg",$scope.modelImage="modules/core/img/model1.png"):emotionIndex>20&&emotionIndex<=40?($scope.qrCode="modules/core/img/qr2.jpg",$scope.modelImage="modules/core/img/model2.png"):emotionIndex>40&&emotionIndex<=60?($scope.qrCode="modules/core/img/qr3.jpg",$scope.modelImage="modules/core/img/model3.png"):emotionIndex>60&&emotionIndex<=80?($scope.qrCode="modules/core/img/qr4.jpg",$scope.modelImage="modules/core/img/model4.png"):emotionIndex>80&&($scope.qrCode="modules/core/img/qr5.jpg",$scope.modelImage="modules/core/img/model5.png")}]),angular.module("core").controller("HomeController",["ExperimentManager","$scope","$log",function(ExperimentManager,$scope,$log){$log.debug("Loading HomeController."),ExperimentManager.masterReset().then(function(){$scope.readyToAdvance=!0},function(){throw $scope.addGenericErrorAlert(),new Error("An experiment schema could not be fetched from the server")}),$scope.readyToAdvance=!1}]),angular.module("core").controller("ImpulsePlaybackController",["$scope","TrialData","$timeout","ExperimentManager","$log","OSC",function($scope,TrialData,$timeout,ExperimentManager,$log,OSC){$log.debug("Loading ImpulsePlaybackController.");var thisController=this;$scope.currentButtonLabel="Continue",$scope.mediaHasPlayed=!1,$scope.buttonDisabled=!1,$scope.startImpulsePlayback=function(){var mediaIndex=TrialData.data.state.mediaPlayCount,mediaLabel=TrialData.data.media[mediaIndex].label;$log.debug("Requesting playback of '"+mediaLabel+"'."),OSC.send({oscType:"message",address:"/eim/control/mediaID",args:[{type:"string",value:""+mediaLabel},{type:"string",value:""+TrialData.data.metadata.session_number}]}),$log.debug("Binding $scope.buttonAction in ImpulsePlaybackController to ExperimentManager.advanceSlide"),$scope.buttonAction=ExperimentManager.advanceSlide},$scope.buttonAction=$scope.startImpulsePlayback,$scope.$on("$destroy",function(){$log.debug("ImpulsePlaybackController scope destroyed. Stopping playback, removing OSC listener, and showing body."),OSC.send({oscType:"message",address:"/eim/control/stopMedia",args:{type:"string",value:""+TrialData.data.metadata.session_number}}),OSC.unsubscribe("/eim/status/playback",thisController.playbackMessageListener),OSC.unsubscribe("/eim/status/emotionIndex",thisController.emotionIndexMessageListener),$scope.showBody()}),this.requestEmotionIndex=function(){$log.debug("Requesting emotion index."),OSC.send({oscType:"message",address:"/eim/control/emotionIndex",args:[{type:"string",value:""+TrialData.data.metadata.session_number}]})},this.playbackMessageListener=function(msg){switch(parseInt(msg.args[0].value)){case 0:thisController.requestEmotionIndex(),$scope.showBody(),$timeout(function(){$scope.$apply(function(){$scope.currentButtonLabel="Continue",$scope.mediaHasPlayed=!0,$scope.buttonDisabled=!0})});break;case 1:$scope.hideBody()}},this.emotionIndexMessageListener=function(msg){var emotionIndex=parseInt(msg.args[0].value);TrialData.data.state.mediaPlayCount++,TrialData.setValueForPathForCurrentMedia("data.answers.emotion_indices",emotionIndex),$timeout(function(){$scope.$apply(function(){$scope.buttonDisabled=!1,ExperimentManager.advanceSlide()})})},OSC.subscribe("/eim/status/playback",this.playbackMessageListener),OSC.subscribe("/eim/status/emotionIndex",this.emotionIndexMessageListener)}]),angular.module("core").controller("LastScreenController",["$scope","TrialData","$http","$log",function($scope,TrialData,$http,$log){$log.debug("Loading LastScreenController."),$http.post("/api/trials",TrialData.toCompact()).catch(function(response){var errorMessage="The POST to /api/trials failed.";throw $log.error(errorMessage,response),new Error(errorMessage)})}]),angular.module("core").controller("MasterController",["$scope","TrialData","hotkeys","ExperimentManager","gettextCatalog","$state","$timeout","$log","$http","$rootScope","OSC",function($scope,TrialData,hotkeys,ExperimentManager,gettextCatalog,$state,$timeout,$log,$http,$rootScope,OSC){$log.debug("Loading MasterController.");var thisController=this;$scope.trialDataJson=function(){return TrialData.toJson()},$scope.setLanguage=function(language){$log.debug("MasterController setting language to '"+language+"'."),gettextCatalog.setCurrentLanguage(language),TrialData.language(language)},$scope.startOver=function(){$log.debug("MasterController starting over."),$state.go("home",{},{reload:!0}),$scope.debugMode=!1,$scope.alerts=[],thisController.setLanguageToDefault()},$scope.alerts=[],$scope.addAlert=function(alert){for(var errorExists=!1,i=0;i<$scope.alerts.length;i++)if($scope.alerts[i].msg===alert.msg&&$scope.alerts[i].type===alert.type){$log.debug("Not adding "+alert.msg+" to visible alerts, as it already exists in $scope.alerts."),errorExists=!0;break}errorExists||($log.debug("Adding '"+alert.msg+"' to $scope.alerts."),$scope.alerts.push(alert))},$scope.closeAlert=function(index){$log.debug("Closing alert at index "+index+": '"+$scope.alerts[index].msg+"'"),$scope.alerts.splice(index,1)},$scope.addGenericErrorAlert=function(){$log.debug("Adding generic error alert."),$scope.addAlert({type:"danger",msg:"There seems to be a problem. Please contact a mediator for assistance."})},$scope.blackoutClass=!1,$scope.hideBody=function(){$log.debug("Hiding body."),$scope.blackoutClass=!0},$scope.showBody=function(){$log.debug("Showing body."),$scope.blackoutClass=!1},$scope.toggleBodyVisibility=function(){$log.debug("Toggling body visibility."),$scope.blackoutClass=!$scope.blackoutClass},$scope.advanceSlide=function(){$log.debug("MasterController advancing slide."),thisController.resetInactivityTimeout(),$scope.alerts=[],ExperimentManager.advanceSlide()},$scope.handleRightArrow=function(){$scope.debugMode&&$scope.advanceSlide()},$scope.debugMode=!1,$scope.toggleDebugMode=function(){$scope.debugMode=!$scope.debugMode;var alertMessage="Debug mode has been ";$scope.debugMode?($log.info("Debug mode enabled."),alertMessage+="enabled."):($log.info("Debug mode disabled."),alertMessage+="disabled."),$scope.addAlert({type:"info",msg:alertMessage})},this.setLanguageToDefault=function(){$http.get("/api/config").then(function(response){if(!response.data.hasOwnProperty("defaultLanguage")){var message="A default language was not provided by the server.";throw $log.error(message,response),new Error(message)}$scope.setLanguage(response.data.defaultLanguage)}).catch(function(response){var message="There was a problem retrieving the configuration from the server.";throw $log.error(message,response),new Error(message)})},this.resetInactivityTimeout=function(){$log.debug("MasterController resetting inactivity timeout."),$timeout.cancel(thisController.inactivityTimeout),thisController.inactivityTimeout=$timeout(thisController.startOver,3e5)},$log.debug("Setting up hot keys."),hotkeys.add({combo:"d d",description:"Toggle debug mode",callback:$scope.toggleDebugMode}),hotkeys.add({combo:"right",description:"Advance slide",callback:$scope.handleRightArrow}),$rootScope.$on("$stateChangeSuccess",function(){document.body.scrollTop=document.documentElement.scrollTop=0}),this.setLanguageToDefault(),this.resetInactivityTimeout()}]),angular.module("core").controller("MediaPlaybackController",["$scope","TrialData","$timeout","ExperimentManager","$log","OSC",function($scope,TrialData,$timeout,ExperimentManager,$log,OSC){$log.debug("Loading MediaPlaybackController.");var thisController=this;$scope.currentButtonLabel="Begin Playback",$scope.mediaHasPlayed=!1,$scope.buttonDisabled=!1,$scope.startMediaPlayback=function(){var mediaIndex=TrialData.data.state.mediaPlayCount,mediaLabel=TrialData.data.media[mediaIndex].label;$log.debug("Requesting playback of '"+mediaLabel+"'."),OSC.send({oscType:"message",address:"/eim/control/mediaID",args:[{type:"string",value:""+mediaLabel},{type:"string",value:""+TrialData.data.metadata.session_number}]}),$log.debug("Binding $scope.buttonAction in MediaPlaybackController to ExperimentManager.advanceSlide"),$scope.buttonAction=ExperimentManager.advanceSlide},$scope.buttonAction=$scope.startMediaPlayback,$scope.$on("$destroy",function(){$log.debug("MediaPlaybackController scope destroyed. Stopping playback, removing OSC listener, and showing body."),OSC.send({oscType:"message",address:"/eim/control/stopMedia",args:{type:"string",value:""+TrialData.data.metadata.session_number}}),OSC.unsubscribe("/eim/status/playback",thisController.playbackMessageListener),OSC.unsubscribe("/eim/status/emotionIndex",thisController.emotionIndexMessageListener),$scope.showBody(),ExperimentManager.generatePlot()}),this.requestEmotionIndex=function(){$log.debug("Requesting emotion index."),OSC.send({oscType:"message",address:"/eim/control/emotionIndex",args:[{type:"string",value:""+TrialData.data.metadata.session_number}]})},this.playbackMessageListener=function(msg){switch(parseInt(msg.args[0].value)){case 0:thisController.requestEmotionIndex(),$scope.showBody(),$timeout(function(){$scope.$apply(function(){$scope.currentButtonLabel="Continue",$scope.mediaHasPlayed=!0,$scope.buttonDisabled=!0})});break;case 1:$scope.hideBody()}},this.emotionIndexMessageListener=function(msg){var emotionIndex=parseInt(msg.args[0].value);TrialData.data.state.mediaPlayCount++,TrialData.setValueForPathForCurrentMedia("data.answers.emotion_indices",emotionIndex),$timeout(function(){$scope.$apply(function(){$scope.buttonDisabled=!1,ExperimentManager.advanceSlide()})})},OSC.subscribe("/eim/status/playback",this.playbackMessageListener),OSC.subscribe("/eim/status/emotionIndex",this.emotionIndexMessageListener)}]),angular.module("core").controller("QuestionnaireController",["$scope","TrialData","$log",function($scope,TrialData,$log){$log.debug("Loading QuestionnaireController."),$scope.questionnaireData=TrialData.data.schema[TrialData.data.state.currentSlideIndex].data}]),angular.module("core").controller("SignalTestController",["$scope","TrialData","$timeout","$log","OSC",function($scope,TrialData,$timeout,$log,OSC){$log.debug("Loading SignalTestController."),$scope.edaQuality=0,$scope.poxQuality=0,$scope.testRecordingComplete=!1,$scope.readyToAdvance=function(){return!!$scope.debugMode||$scope.allSignalsGood()},$scope.allSignalsGood=function(){return $scope.edaQuality&&$scope.poxQuality},this.sendStartSignalTestMessage=function(){$log.debug("Sending start signal test message to Max."),OSC.send({oscType:"message",address:"/eim/control/signalTest",args:[{type:"integer",value:1},{type:"string",value:""+TrialData.data.metadata.session_number}]})},this.sendStopSignalTestMessage=function(){$log.debug("Sending stop signal test message to Max.");var stopMessage={oscType:"message",address:"/eim/control/signalTest",args:[{type:"integer",value:0},{type:"string",value:""+TrialData.data.metadata.session_number}]};OSC.send(stopMessage)},this.edaQualityMessageListener=function(msg){var edaQuality=msg.args[0].value;0===edaQuality&&$log.warn("Bad EDA signal detected on terminal "+TrialData.data.metadata.terminal+"."),$scope.$apply(function(){$scope.edaQuality=edaQuality})},this.poxQualityMessageListener=function(msg){var poxQuality=msg.args[0].value;0===poxQuality&&$log.warn("Bad POX signal detected on terminal "+TrialData.data.metadata.terminal+"."),$scope.$apply(function(){$scope.poxQuality=poxQuality})},this.recordingCompleteMessageListener=function(){$scope.$apply(function(){$scope.testRecordingComplete=!0}),this.sendStopSignalTestMessage()};var thisController=this;$timeout(function(){thisController.sendStopSignalTestMessage(),$timeout(function(){$scope.edaQuality=1,$scope.poxQuality=1},2500)},12500),OSC.subscribe("/eim/status/signalQuality/eda",this.edaQualityMessageListener),OSC.subscribe("/eim/status/signalQuality/pox",this.poxQualityMessageListener),OSC.subscribe("/eim/status/testRecordingComplete",this.recordingCompleteMessageListener);var controller=this;$scope.$on("$destroy",function(){OSC.unsubscribe("/eim/status/signalQuality/eda",controller.edaQualityMessageListener),OSC.unsubscribe("/eim/status/signalQuality/pox",controller.poxQualityMessageListener),OSC.unsubscribe("/eim/status/testRecordingComplete",controller.recordingCompleteMessageListener),controller.sendStopSignalTestMessage()}),this.sendStartSignalTestMessage()}]),angular.module("core").controller("SoundTestController",["$scope","TrialData","gettextCatalog","$log","OSC",function($scope,TrialData,gettextCatalog,$log,OSC){$log.debug("Loading SoundTestController."),$scope.stopSoundTest=function(){$log.debug("Sending stop sound test message to Max."),OSC.send(stopTestMessage)},$scope.destroyed=!1,$scope.$on("$destroy",function(){$log.debug("SoundTestController $scope destroyed."),$scope.stopSoundTest()});var currentLanguage=gettextCatalog.currentLanguage,startTestMessage={oscType:"message",address:"/eim/control/soundTest",args:[{type:"integer",value:1},{type:"string",value:currentLanguage},{type:"string",value:""+TrialData.data.metadata.session_number}]},stopTestMessage={oscType:"message",address:"/eim/control/soundTest",args:[{type:"integer",value:0},{type:"string",value:""+TrialData.data.metadata.session_number}]};$log.debug("Sending start sound test message to Max."),OSC.send(startTestMessage)}]),angular.module("core").controller("StartController",["$scope","$timeout","TrialData","ExperimentManager","$log","OSC",function($scope,$timeout,TrialData,ExperimentManager,$log,OSC){$log.debug("Loading StartController."),$scope.readyToAdvance=function(){return $scope.maxReady||$scope.debugMode},$scope.maxReady=!1;var thisController=this;$scope.$on("$destroy",function(){OSC.unsubscribe("/eim/status/startExperiment",thisController.startMessageListener),$log.debug("Cancelling timeout on StartController."),$timeout.cancel(thisController.errorTimeout)}),this.startMessageListener=function(msg){$log.info("StartController received an OSC message."),$log.info(msg),$scope.$apply(function(){$scope.maxReady=!0})},this.sendExperimentStartMessage=function(){$log.info("StartController sending experiment start message."),$scope.maxReady=!1,OSC.send({oscType:"message",address:"/eim/control/startExperiment",args:{type:"string",value:""+TrialData.data.metadata.session_number}})},this.errorTimeout=$timeout(function(){},1e4),this.errorTimeout.then(function(){if(!$scope.readyToAdvance())throw $scope.addGenericErrorAlert(),new Error("Max did not responded to the startExperiment message within 10 seconds.")}),OSC.subscribe("/eim/status/startExperiment",this.startMessageListener);var now=new Date;$log.info("Setting time on TrialData as "+now.toISOString()),TrialData.data.date=now.toISOString(),this.sendExperimentStartMessage()}]),angular.module("core").directive("checkboxQuestion",["$compile","TrialData","$log",function($compile,TrialData,$log){return $log.debug("Compiling checkboxQuestion directive."),{restrict:"E",scope:{},link:function(scope,element,attrs){scope.someSelected=!1,scope.sendToTrialData=function(path,value){attrs.associatedToMedia?TrialData.setValueForPathForCurrentMedia(path,value):TrialData.setValueForPath(path,value)},scope.updateCheckboxes=function(){for(var newSomeSelectedValue=!1,checkedOptions=[],inputs=element.find("input"),i=0;i<inputs.length;i++){var input=angular.element(inputs[i]);input.attr("name")===attrs.questionId+"Checkbox"&&!0===input.prop("checked")&&(newSomeSelectedValue=!0,checkedOptions.push(input.attr("value").toLowerCase()))}scope.someSelected=newSomeSelectedValue,checkedOptions.sort(),scope.sendToTrialData(attrs.controllerDataPath,checkedOptions)}
;var questionText='<div class="row well"><div class="col-md-12"><label for="'+attrs.questionId+'Checkbox" translate>'+attrs.questionLabel+"</label><div>",innerQuestionText="";if(element.data("questionOptions"))for(var i=0;i<element.data("questionOptions").choices.length;i++){var thisOption=element.data("questionOptions").choices[i];innerQuestionText+='<label class="checkbox-inline">',innerQuestionText+='<input type="checkbox" name="'+attrs.questionId+'Checkbox" id="'+attrs.questionId+"Checkbox"+thisOption.value+'" value="'+thisOption.value+'" ng-model="'+attrs.questionId+"Checkbox"+thisOption.value+'" ng-change="updateCheckboxes()"',!1!==element.data("questionRequired")&&(innerQuestionText+='ng-required="!someSelected"'),innerQuestionText+=">{{'"+thisOption.label+"' | translate}}</input>",innerQuestionText+="</label>"}questionText+=innerQuestionText+"</div></div></div>";var questionElement=angular.element(questionText);element.append(questionElement),$compile(element.contents())(scope)}}}]),angular.module("core").directive("displayTrialData",["$log",function($log){return $log.debug("Rendering displayTrialData directive."),{restrict:"AE",template:'<div class="row trial-data-row"><div class="col-md-12"><h3>Trial Data</h3><pre>{{trialDataJson()}}</pre></div></div>'}}]),angular.module("core").directive("dropdownQuestion",["$compile","TrialData","$log",function($compile,TrialData,$log){return $log.debug("Compiling dropdownQuestion directive."),{restrict:"E",scope:{},link:function(scope,element,attrs){scope.sendToTrialData=function(path,value){attrs.associatedToMedia?TrialData.setValueForPathForCurrentMedia(path,value):TrialData.setValueForPath(path,value)},scope[attrs.questionId+"Select"]=null,scope.$watch(attrs.questionId+"Select",function(newValue){scope.sendToTrialData(attrs.controllerDataPath,newValue)});var rowDiv=angular.element('<div class="row well"></div>'),formDiv=angular.element('<div class="col-md-12 form-group"></div>');rowDiv.append(formDiv);var label=angular.element('<label class="control-label" translate>'+attrs.questionLabel+"</label>");label.prop("for",attrs.questionId),formDiv.append(label);var select=angular.element('<select class="form-control" required></select>');if(!1===element.data("questionRequired")&&select.removeAttr("required"),select.attr("id",attrs.questionId),select.attr("name",attrs.questionId),select.attr("ng-model",attrs.questionId+"Select"),element.data("questionOptions")){scope.dropdownOptions=element.data("questionOptions").choices;for(var i in scope.dropdownOptions){var optionText=scope.dropdownOptions[i],option=angular.element('<option>{{ "'+optionText.label+'" | translate }}</option>');option.attr("value",optionText.value),select.append(option)}}formDiv.append(select),element.append(rowDiv),$compile(element.contents())(scope)}}}]),angular.module("core").directive("questionnaire",["$compile","$log",function($compile,$log){function buildScaleQuestion(item){var questionElement=angular.element("<scale-question></scale-question>");return item.questionLabelType&&questionElement.attr("label-type",item.questionLabelType),item.questionLikertMinimumDescription&&questionElement.attr("minimum-description",item.questionLikertMinimumDescription),item.questionLikertMaximumDescription&&questionElement.attr("maximum-description",item.questionLikertMaximumDescription),item.questionLikertSingleImageSrc&&questionElement.attr("single-img-src",item.questionLikertSingleImageSrc),item.questionLikertLeftImageSrc&&questionElement.attr("left-img-src",item.questionLikertLeftImageSrc),item.questionLikertRightImageSrc&&questionElement.attr("right-img-src",item.questionLikertRightImageSrc),questionElement}function buildRadioQuestion(){return angular.element("<radio-question></radio-question>")}function buildDropdownQuestion(){return angular.element("<dropdown-question></dropdown-question>")}function buildCheckboxQuestion(){return angular.element("<checkbox-question></checkbox-question>")}return $log.debug("Compiling questionnaire directive."),{restrict:"E",scope:{questionnaireData:"=",questionnaireForm:"="},link:function(scope,element){var data=scope.questionnaireData,div=angular.element("<div></div>");if(data.hasOwnProperty("title"))if("string"==typeof data.title){var title=angular.element("<h1></h1>");title.attr("translate",""),title.html(data.title),element.append(title)}else $log.error("Questionnaire title must be a string.");if(data.hasOwnProperty("introductoryText"))if("string"==typeof data.introductoryText){var row=div.clone();row.addClass("row");var columns=div.clone();columns.addClass("col-md-12 introductory-text");var heading=angular.element("<h2></h2>");heading.attr("translate",""),heading.html(data.introductoryText),element.append(row),row.append(columns),columns.append(heading)}else $log.error("Questionnaire introductory text must be a string.");var formElement=angular.element("<form></form>");formElement.addClass("form"),formElement.attr("name","questionnaireForm"),formElement.attr("novalidate",""),0===data.structure.length&&$log.warn("No questions found for questionnaire.");for(var i=0;i<data.structure.length;i++){var questionElement,item=data.structure[i];switch(item.hasOwnProperty("questionType")&&"string"==typeof item.questionType||($log.error("questionType must be provided."),$log.error(item)),item.questionType){case"likert":questionElement=buildScaleQuestion(item);break;case"radio":questionElement=buildRadioQuestion(item);break;case"dropdown":questionElement=buildDropdownQuestion(item);break;case"checkbox":questionElement=buildCheckboxQuestion(item);break;default:$log.error("Unrecognized questionType: "+item.questionType)}item.hasOwnProperty("questionOptions")?questionElement.data("questionOptions",item.questionOptions):"likert"!==item.questionType&&($log.error("questionOptions must be provided for questionTypes other than 'likert'."),console.log("item:"),console.log(item)),item.hasOwnProperty("questionRequired")?questionElement.data("questionRequired",item.questionRequired):questionElement.data("questionRequired",!0),item.hasOwnProperty("questionStoragePath")?"string"==typeof item.questionStoragePath?questionElement.attr("controller-data-path",item.questionStoragePath):$log.error("questionStoragePath must be a string."):$log.error("questionStoragePath must be provided."),item.hasOwnProperty("questionIsAssociatedToMedia")&&questionElement.attr("associated-to-media",item.questionIsAssociatedToMedia),item.hasOwnProperty("questionId")?"string"==typeof item.questionId?questionElement.attr("question-id",item.questionId):$log.error("questionId must be a string."):$log.error("questionId must be provided."),item.hasOwnProperty("questionLabel")&&questionElement.attr("question-label",item.questionLabel);var spacerRow=div.clone();spacerRow.addClass("row");var spacerColumns=div.clone();spacerColumns.addClass("col-md-12 question-spacer"),spacerRow.append(spacerColumns),formElement.append(questionElement),formElement.append(spacerRow)}element.append(formElement),$compile(element.contents())(scope)}}}]),angular.module("core").directive("radioQuestion",["$compile","TrialData","$log",function($compile,TrialData,$log){return $log.debug("Compiling radioQuestion directive."),{restrict:"E",scope:{},link:function(scope,element,attrs){scope.sendToTrialData=function(path,value){attrs.associatedToMedia?TrialData.setValueForPathForCurrentMedia(path,value):TrialData.setValueForPath(path,value)},scope[attrs.questionId+"RadioGroup"]=null,scope.$watch(attrs.questionId+"RadioGroup",function(newValue){"true"===newValue?newValue=!0:"false"===newValue&&(newValue=!1),scope.sendToTrialData(attrs.controllerDataPath,newValue)});var questionText='<div class="row"><div class="col-md-12"><label for="'+attrs.questionId+'Radio" translate>'+attrs.questionLabel+"</label><div>",innerQuestionText="",requiredText="";if(!1!==element.data("questionRequired")&&(requiredText=' required="required" '),element.data("questionOptions"))for(var i=0;i<element.data("questionOptions").choices.length;i++){var thisOption=element.data("questionOptions").choices[i];innerQuestionText+='<label class="radio-inline"><input type="radio" name="'+attrs.questionId+'RadioGroup" id="'+attrs.questionId+"Radio"+thisOption.label+'" value="'+thisOption.value+'" ng-model="'+attrs.questionId+'RadioGroup" '+requiredText+">{{'"+thisOption.label+"' | translate}}</input></label>"}questionText+=innerQuestionText+"</div></div></div>";var questionElement=angular.element(questionText);questionElement.addClass("well"),element.append(questionElement),$compile(element.contents())(scope)}}}]),angular.module("core").directive("scaleQuestion",["$compile","TrialData","$log",function($compile,TrialData,$log){function buildHeaderRow(labelType,labelHTML){var row;row=angular.element("<div></div>"),row.addClass("row");var columns=angular.element("<div></div>");columns.addClass("col-md-12");var label;return label="labelLeft"===labelType?angular.element("<label></label>"):angular.element("<h3></h3>"),label.attr("translate",""),label.html(labelHTML),row.append(columns),columns.append(label),row}function buildImageRow(singleImgSrc,leftImgSrc,rightImgSrc){var row;if("string"==typeof singleImgSrc||"string"==typeof leftImgSrc&&"string"==typeof rightImgSrc){row=angular.element("<div></div>"),row.addClass("row likert-image-row");var twoColumns=angular.element("<div></div>");if(twoColumns.addClass("col-md-2"),singleImgSrc){var image=angular.element("<img>");image.attr("src",singleImgSrc);var eightColumns=angular.element("<div></div>");eightColumns.addClass("col-md-8"),eightColumns.addClass("text-center"),eightColumns.append(image),row.append(twoColumns.clone(),eightColumns,twoColumns.clone())}else if(leftImgSrc&&rightImgSrc){var leftImage=angular.element("<img>");leftImage.attr("src",leftImgSrc);var leftImageColumns=twoColumns.clone();leftImageColumns.append(leftImage);var rightImage=angular.element("<img>");rightImage.attr("src",rightImgSrc);var rightImageColumns=twoColumns.clone();rightImageColumns.append(rightImage);var fourColumns=angular.element("<div></div>");fourColumns.addClass("col-md-4"),row.append(twoColumns.clone(),leftImageColumns,fourColumns.clone(),rightImageColumns,twoColumns.clone())}}return row}function buildDescriptionsRow(minimumDesc,maximumDesc){var descriptions;if(minimumDesc&&maximumDesc){descriptions=angular.element("<div></div>"),descriptions.addClass("row"),descriptions.addClass("row-likert-descriptions");var sideSpacer=angular.element("<div></div>");sideSpacer.addClass("col-md-2");angular.element("<div></div>").addClass("col-md-4");var descriptionsInnerRow=angular.element("<div></div>");descriptionsInnerRow.addClass("col-md-8"),descriptionsInnerRow.addClass("likert-descriptions-container");var fifthsColumnSpacer=angular.element("<div></div>");fifthsColumnSpacer.addClass("col-md-5ths");var leftTextBlock=angular.element("<div translate></div>");leftTextBlock.addClass("col-md-5ths"),leftTextBlock.addClass("small"),leftTextBlock.addClass("text-center"),leftTextBlock.addClass("likert-minimum-description"),leftTextBlock.html(minimumDesc);var rightTextBlock=leftTextBlock.clone();rightTextBlock.removeClass("likert-minimum-description"),rightTextBlock.addClass("likert-maximum-description"),rightTextBlock.html(maximumDesc),descriptionsInnerRow.append(leftTextBlock),descriptionsInnerRow.append(fifthsColumnSpacer.clone(),fifthsColumnSpacer.clone(),fifthsColumnSpacer.clone()),descriptionsInnerRow.append(rightTextBlock),descriptions.append(sideSpacer.clone(),descriptionsInnerRow,sideSpacer.clone())}return descriptions}function questionIsValid(questionOptions,singleImgSrc,leftImgSrc,rightImgSrc,minimumDescription,maximumDescription){if(void 0!==questionOptions){if("object"!=typeof questionOptions||Array.isArray(questionOptions))return $log.error("questionOptions was not an object."),!1;if(!questionOptions.hasOwnProperty("choices"))return $log.error("questionOptions did not have a choice property."),!1;if(!Array.isArray(questionOptions.choices))return $log.error("questionOptions.choices was not an array."),!1;if(5!==questionOptions.choices.length)return $log.error("questionOptions.choices did not have five choices."),!1;for(var i in questionOptions.choices){var choice=questionOptions.choices[i];if("object"!=typeof choice||Array.isArray(choice))return $log.error("questionOptions.choices["+i+"] was not an object."),!1;if(!choice.hasOwnProperty("label"))return $log.error("questionOptions.choices["+i+"] did not have a label property."),!1;if("string"!=typeof choice.label)return $log.error("questionOptions.choices["+i+"].label was not a string."),!1}}return void 0!==singleImgSrc&&"string"!=typeof singleImgSrc?($log.error("single-img-src was not a string."),!1):void 0!==leftImgSrc&&void 0===rightImgSrc||void 0!==rightImgSrc&&void 0===leftImgSrc?($log.error("Either left-img-src or right-img-src was given, but the other was not."),!1):void 0===leftImgSrc||void 0===rightImgSrc||"string"==typeof leftImgSrc&&"string"==typeof rightImgSrc?void 0!==minimumDescription&&void 0===maximumDescription||void 0!==maximumDescription&&void 0===minimumDescription?($log.error("Either minimum-description or maximum-description was given, but the other was not."),!1):void 0===minimumDescription||void 0===maximumDescription||"string"==typeof minimumDescription&&"string"==typeof maximumDescription||($log.error("Either minimum-description or maximum-description was not a string."),!1):($log.error("Either left-img-src or right-img-src was not a string"),!1)}function buildOptionLabelsRow(questionOptions){var optionLabelsRow;if(void 0!==questionOptions&&questionOptions.hasOwnProperty("choices")){var choices=questionOptions.choices,div=angular.element("<div></div>");optionLabelsRow=div.clone(),optionLabelsRow.addClass("row row-likert-option-label");var spacer=div.clone();spacer.addClass("col-md-2 option-label-spacer"),optionLabelsRow.append(spacer.clone());var choiceContainer=div.clone();choiceContainer.addClass("col-md-8 likert-option-label-container text-center");var choice=div.clone();choice.addClass("col-md-5ths likert-option-label text-center"),choice.attr("translate","");for(var i in choices){var thisChoice=choice.clone();thisChoice.html("{{ '"+choices[i].label+"' }}"),choiceContainer.append(thisChoice)}optionLabelsRow.append(choiceContainer),optionLabelsRow.append(spacer.clone())}return optionLabelsRow}function buildRadiosRow(questionId,questionRequired){var responseRequired=!1;!1!==questionRequired&&(responseRequired=!0);var div=angular.element("<div></div>"),radioDiv=div.clone();radioDiv.addClass("col-md-5ths text-center");var centerContainer=div.clone();centerContainer.addClass("col-md-8 text-center");var radioInput=angular.element("<input>");radioInput.attr("type","radio"),radioInput.attr("name",questionId+"RadioGroup"),radioInput.attr("ng-model",questionId+"RadioGroup"),responseRequired&&radioInput.attr("required","");for(var i=1;i<=5;i++){var thisRadioDiv=radioDiv.clone(),thisRadio=radioInput.clone();thisRadio.attr("id",questionId+"RadioGroup"+i),thisRadio.attr("value",i),thisRadioDiv.append(thisRadio),centerContainer.append(thisRadioDiv)}var radiosRow=div.clone();radiosRow.addClass("row");var spacer=div.clone();return spacer.addClass("col-md-2"),radiosRow.append(spacer.clone(),centerContainer,spacer.clone()),radiosRow}return $log.debug("Compiling scaleQuestion directive."),{restrict:"E",scope:{},controller:function(){this.questionOptionsAreValid=questionIsValid},link:function(scope,element,attrs,ctrl){if(questionIsValid(element.data("questionOptions"),attrs.singleImgSrc,attrs.leftImgSrc,attrs.rightImgSrc,attrs.minimumDescription,attrs.maximumDescription)){scope.sendToTrialData=function(path,value){attrs.associatedToMedia?TrialData.setValueForPathForCurrentMedia(path,value):TrialData.setValueForPath(path,value)},scope[attrs.questionId+"RadioGroup"]=null,scope.$watch(attrs.questionId+"RadioGroup",function(newValue){scope.sendToTrialData(attrs.controllerDataPath,parseInt(newValue))});var headerRow=buildHeaderRow(attrs.labelType,attrs.questionLabel),imageRow=buildImageRow(attrs.singleImgSrc,attrs.leftImgSrc,attrs.rightImgSrc),radiosRow=buildRadiosRow(attrs.questionId,element.data("questionRequired")),optionLabelsRow=buildOptionLabelsRow(element.data("questionOptions")),descriptionsRow=buildDescriptionsRow(attrs.minimumDescription,attrs.maximumDescription),wellRow=angular.element("<div></div>");wellRow.addClass("row well"),wellRow.append(headerRow,imageRow,optionLabelsRow,radiosRow,descriptionsRow),element.append(wellRow),$compile(element.contents())(scope)}}}}]),angular.module("core").factory("ExperimentManager",["TrialData","$q","$http","$state","$log","rfc4122","$rootScope","lodash",function(TrialData,$q,$http,$state,$log,rfc4122,$rootScope,lodash){function stateChangeStartListener(){returnObject.stateChanging=!0}function stateChangeSuccessListener(){returnObject.stateChanging=!1}$log.debug("Instantiating ExperimentManager service."),$rootScope.$on("$stateChangeStart",stateChangeStartListener),$rootScope.$on("$stateChangeSuccess",stateChangeSuccessListener);var returnObject={advanceSlide:function(){if(!this.stateChanging){TrialData.data.state.currentSlideIndex++;var currentSlideIndex=TrialData.data.state.currentSlideIndex;if(currentSlideIndex===TrialData.data.schema.length)$state.go("home",{},{reload:!0});else{var timestamp=new Date;TrialData.data.timestamps.push({slide:TrialData.data.schema[TrialData.data.state.currentSlideIndex].name,timestamp:timestamp.toISOString()}),$state.go(TrialData.data.schema[currentSlideIndex].name,{},{reload:!0})}}},generatePlot:function(){$http.get("/api/generate-plots/"+TrialData.metadata.session_number+"/"+TrialData.data.media[TrialData.data.state.currentSlideIndex].label)},masterReset:function(){var deferred=$q.defer();return TrialData.reset(),$http.get("/api/experiment-schemas/random").success(function(data){TrialData.data.media=data.media,TrialData.data.schema=data.structure,$http.get("/api/config").success(function(data){TrialData.data.metadata=lodash.merge(TrialData.data.metadata,data.metadata),TrialData.data.metadata.session_number=rfc4122.v4(),data.hasOwnProperty("defaultLanguage")&&"string"==typeof data.defaultLanguage&&data.defaultLanguage.length>0&&(TrialData.data.metadata.language=data.defaultLanguage),data.hasOwnProperty("exportedProperties")&&Array.isArray(data.exportedProperties)&&(TrialData.exportedProperties=data.exportedProperties),deferred.resolve()}).error(function(){deferred.reject("The configuration could notbe fetched from the server.")})}).error(function(){deferred.reject("An experiment schema could not be fetched from the server")}),deferred.promise},stateChanging:!1,stateChangeStartListener:stateChangeStartListener,stateChangeSuccessListener:stateChangeSuccessListener};return returnObject}]),angular.module("core").factory("ExperimentValidator",["$log",function($log){return $log.debug("Instantiating ExperimentValidator service."),{validateSchema:function(schema){var constraints={structure:{presence:!0},media:{presence:!0}},isValid=validate(schema,constraints);if(void 0!==isValid)return isValid;if(!1===(isValid=validate.isArray(schema.structure)))return isValid;for(var i=0;i<schema.media.length;i++){var item=schema.media[i],itemIsValid=this.validateMediaEntry(item);if(void 0!==itemIsValid)return itemIsValid}},validateMediaEntry:function(entry){var constraints={artist:{presence:!0},title:{presence:!0},label:{presence:!0}},isValid=validate(entry,constraints);return void 0!==isValid?isValid:!1===(isValid=validate.isString(entry.artist))?isValid:!1===(isValid=validate.isString(entry.title))?isValid:(isValid=validate.isString(entry.label),!1===isValid?isValid:void 0)},validateStructureEntry:function(entry){var constraints={name:{presence:!0}},isValid=validate(entry,constraints);return void 0!==isValid?isValid:(isValid=validate.isString(entry.name),!1===isValid?isValid:void 0)}}}]),angular.module("core").factory("OSC",["$log","SocketIOService",function($log,SocketIOService){$log.debug("Instantiating OSC service.");var returnObject={incomingMessageHandler:function(message){var address=message.address;if(returnObject.listeners.hasOwnProperty(address))for(var handlers=returnObject.listeners[address],i=0;i<handlers.length;i++)handlers[i](message);else $log.info("Unhandled OSC message.",message)},subscribe:function(address,callback){return void 0===address||void 0===callback?$log.error("You must specify both an address and a callback to subscribe."):"string"!=typeof address?$log.error("Address must be a string."):"function"!=typeof callback?$log.error("Callback must be a function."):($log.debug("Attaching listener for incoming OSC messages to address: "+address),this.listeners.hasOwnProperty(address)||(this.listeners[address]=[]),void this.listeners[address].push(callback))},unsubscribe:function(address,callback){if(void 0===address||void 0===callback)return $log.error("You must specify both an address and a callback to unsubscribe.");if("string"!=typeof address)return $log.error("Address must be a string.");if(!this.listeners.hasOwnProperty(address)||0===this.listeners[address].length)return $log.error("There are no subscribers for OSC messages to address: '"+address+"'");var index=this.listeners[address].indexOf(callback);index>=0&&this.listeners[address].splice(index,1)},send:function(message,callback){SocketIOService.emit("sendOSCMessage",message,callback)},listeners:{}};return SocketIOService.on("oscMessageReceived",returnObject.incomingMessageHandler),returnObject}]),angular.module("core").factory("SocketIOService",["socketFactory",function(socketFactory){return socketFactory()}]),angular.module("core").factory("TrialData",["$log","lodash",function($log,lodash){function BlankDataObject(){return $log.debug("Creating new BlankDataObject."),{answers:{},date:null,media:[],timestamps:[],metadata:{language:null,session_number:null,location:null,terminal:null},state:{currentSlideIndex:-1,mediaPlayCount:0}}}$log.info("Instantiating TrialData service.");var trialData={data:null,toJson:function(){return $log.debug("TrialData service returning data as JSON."),angular.toJson(this.data,!0)},toJsonCompact:function(){return $log.debug("TrialData service returning data as compact JSON."),angular.toJson(this.toCompact(),!0)},toCompact:function(){if($log.debug("TrialData service returning compacted data."),0===this.exportedProperties.length)return this.data;var pruned={},that=this;return this.exportedProperties.forEach(function(prop){lodash.set(pruned,prop,lodash.get(that.data,prop))}),pruned},exportedProperties:[],reset:function(){$log.info("Resetting TrialData service."),this.data=new BlankDataObject},setValueForPath:function(path,value,options){$log.debug("Setting "+path+" in TrialData to: "+value,options),"true"===value?value=!0:"false"===value&&(value=!1);var numericRegex=/\d+\.?\d?/;if("string"==typeof value&&value.match(numericRegex)&&(value=parseFloat(value)),"string"==typeof value&&(value=value.toLowerCase()),path&&void 0!==value){for(var schema=this,pList=path.split("."),len=pList.length,i=0;i<len-1;i++){var elem=pList[i];schema[elem]||(schema[elem]={}),schema=schema[elem]}if(options&&options.hasOwnProperty("array_index")&&"number"==typeof options.array_index){void 0===schema[pList[len-1]]&&(schema[pList[len-1]]=[]);for(var j=0;j<options.array_index;j++)void 0===schema[pList[len-1]][j]&&(schema[pList[len-1]][j]=null);schema[pList[len-1]][options.array_index]=value}else schema[pList[len-1]]=value}},setValueForPathForCurrentMedia:function(path,value){$log.debug("Setting "+path+" in TrialData for current media to: "+value+".");var index;index=this.data.state.mediaPlayCount<=0?0:this.data.state.mediaPlayCount-1,this.setValueForPath(path,value,{array_index:index})},language:function(newLanguage){return"string"==typeof newLanguage?($log.info("Setting language in TrialData to "+newLanguage),this.data.metadata.language=newLanguage):$log.error("Not updating language in TrialData. A string was not received."),this.data.metadata.language}};return trialData.data=new BlankDataObject,trialData}]);